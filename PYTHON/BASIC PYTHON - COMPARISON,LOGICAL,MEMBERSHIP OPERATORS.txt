Arithmetic Operators

+ 	Addition 	x + y
- 	Subtraction 	x - y
* 	Multiplication 	x * y
/ 	Division 	x / y
% 	Modulus 	x % y		remainder after division
** 	Exponentiation 	x ** y		x power y
// 	Floor division 	x // y		division round down whole number

Bitwise Operators


&  	AND 			Sets each bit to 1 if both bits are 1		 	x & y 	
| 	OR 			Sets each bit to 1 if one of two bits is 1 		x | y 	
^ 	XOR 			Sets each bit to 1 if only one of two bits is 1 	x ^ y 	
~ 	NOT 			Inverts all the bits 					~x 	
<< 	Zero fill left shift 	Shift left by pushing zeros in from the right and let the leftmost bits fall off 				x << 2 	
>> 	Signed right shift 	Shift right by pushing copies of the leftmost bit in from the left, and let the rightmost bits fall off 	x >> 2

# Assignment Operators

= 	x = 5 		x = 5 	
+= 	x += 3 		x = x + 3 	
-= 	x -= 3 		x = x - 3 	
*= 	x *= 3 		x = x * 3 	
/= 	x /= 3 		x = x / 3 	
%= 	x %= 3 		x = x % 3 	
//= 	x //= 3 	x = x // 3 	
**= 	x **= 3 	x = x ** 3 	
&= 	x &= 3 		x = x & 3 	
|= 	x |= 3 		x = x | 3 	
^= 	x ^= 3 		x = x ^ 3 	
>>= 	x >>= 3 	x = x >> 3 	
<<= 	x <<= 3 	x = x << 3

# Comparison Operators (RETURN BOOLEAN - True or False )

== 	Equal 				x == y 	
!= 	Not equal 			x != y 	
> 	Greater than 			x > y 	
< 	Less than 			x < y 	
>= 	Greater than or equal to 	x >= y 	
<= 	Less than or equal to 		x <= y

# Logical Operators (RETURN BOOLEAN - True or False )
 
and  	Returns True if both statements are true 	x < 5 and  x < 10 	
or 	Returns True if one of the statements is true 	x < 5 or x < 4 	
not 	Reverse the result, returns False if the result is true 	not(x < 5 and x < 10)

# Identity Operators / Membership Operators

is  	Returns True if both variables are the same object 	x is y
is not 	Returns True if both variables are not the same object 	x is not y

x = ["apple", "banana"]
y = ["apple", "banana"]
z = x
print(x is z)		# returns True because z is the same object as x
print(x is y)		# returns False because x is not the same object as y, even if they have the same content
print(x == y)		# to demonstrate the difference betweeen "is" and "==": this comparison returns True because x is equal to y

x = ["apple", "banana"]
print("banana" in x)	# returns True because a sequence with the value "banana" is in the list

in  	Returns True if a sequence with the specified value is present in the object 		x in y
not in 	Returns True if a sequence with the specified value is not present in the object 	x not in y

x = ["apple", "banana"]
print("banana" in x)	# returns True because a sequence with the value "banana" is in the list




